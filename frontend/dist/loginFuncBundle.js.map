{"version":3,"file":"loginFuncBundle.js","mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT,+BAA+B,iBAAiB;AAChD,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uFAAuF,uBAAuB;AAC9G,aAAa;AACb;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL,CAAC,EAAE,E","sources":["webpack://frontend/./src/js/page_actions/loginFuncionario.js"],"sourcesContent":["// loginFuncionario.js\r\n\r\n// Aguarda o DOM estar totalmente carregado\r\nwindow.addEventListener(\"DOMContentLoaded\", () => {\r\n  console.log(\"DOM carregado. Script loginFuncionario.js funcionando corretamente.\");\r\n\r\n  const form = document.getElementById(\"login-form\");\r\n  const emailInput = document.getElementById(\"email\");\r\n  const passwordInput = document.getElementById(\"password\");\r\n\r\n  if (!form) {\r\n    console.error(\"Formulário de login não encontrado (id='login-form').\");\r\n    return;\r\n  }\r\n\r\n  form.addEventListener(\"submit\", async (e) => {\r\n    e.preventDefault();\r\n\r\n    const email = emailInput.value.trim();\r\n    const password = passwordInput.value.trim();\r\n\r\n    if (!email || !password) {\r\n      alert(\"Por favor, preencha todos os campos.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:3001/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (!response.ok) {\r\n        alert(data.message || \"Erro ao fazer login.\");\r\n        return;\r\n      }\r\n\r\n      const userId = data?._id;\r\n      if (!userId) {\r\n        alert(\"ID do usuário não encontrado na resposta.\");\r\n        return;\r\n      }\r\n\r\n      // Armazena o ID do usuário localmente\r\n      sessionStorage.setItem(\"user_id\", userId);\r\n      localStorage.setItem(\"loggedUserId\", userId);\r\n\r\n      alert(\"Login realizado com sucesso!\");\r\n      window.location.href = \"./perfil.html\";\r\n\r\n    } catch (error) {\r\n      console.error(\"Erro ao fazer login:\", error);\r\n      alert(\"Erro de rede ao tentar fazer login.\");\r\n    }\r\n  });\r\n});\r\n\r\n\r\n\r\n\r\n/*const UserService = require('../services/userServices');\r\nconst userService = new UserService();\r\n\r\nconst email = document.getElementById('email');\r\nconst password = document.getElementById('password');\r\nconst button = document.getElementById('loginButton');\r\n\r\nbutton.addEventListener('click', async ()=>{\r\n    const emailText = email.value;\r\n    const passwordText = password.value;\r\n\r\n    userService.getUserByAuth(emailText).then((userData)=>{\r\n        if(userData.length != 0 && userData[0] != undefined){\r\n            if(userData[0].email == emailText && userData[0].password == passwordText){\r\n                const id = userData[0]._id;\r\n                window.location.href = `http://localhost:5500/src/pages/home.html?id=${encodeURIComponent(id)}`;\r\n            }else{\r\n                window.alert(\"email or password incorrect\");\r\n            }\r\n        }else{\r\n            window.alert(\"User not finded\");\r\n        }\r\n    }).catch((error)=>{\r\n        window.alert(\"Connection error\");\r\n        console.error(error);\r\n    });\r\n});*/"],"names":[],"sourceRoot":""}